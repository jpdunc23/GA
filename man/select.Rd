% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all.R, R/select.R
\name{select}
\alias{select}
\alias{select}
\title{Ranked each model by its fitness,
Choose parents from generations propotional to their fitness
Do crossover and mutation
Replace a proportion G of the worst old individuals by best
  new individuals}
\usage{
select(X, y, C = ncol(X), randomness = TRUE, generation_count = 2 *
  ncol(X), G = 1)

select(X, y, C = ncol(X), randomness = TRUE, generation_count = 2 *
  ncol(X), G = 1)
}
\arguments{
\item{C}{The length of chromosomes, i.e. the maximum number of
possible predictors.}

\item{X:}{dataframe containing vairables in the model}

\item{y:}{vector targeted variable}

\item{family:}{a description of the error distribution and link function to be used in gm.}

\item{selection:}{selection mechanism. Can be either "proportional" or "tournament".}

\item{K:}{size of each round of selection when using tournament selection.
Must be an integer smaller than generation size.}

\item{randomness:}{if TURE, one parent will be selected randomly}

\item{P:}{population size}

\item{G:}{proportion of worst-performing parents the user wishes to replace by best offspring}

\item{n_splits:}{number of crossover points to use in breeding}

\item{op:}{An optional, user-specified genetic operator function
to carry out the breeding.}

\item{fit_func:}{Function for fitness measurement. Default is AIC.}

\item{max_iter:}{how many iterations to run before stopping}

\item{X:}{dataframe containing vairables in the model}

\item{y:}{vector targeted variable}

\item{C:}{number of random point when crossover}

\item{randomness:}{if TURE, one parent will be selected randomly}

\item{generation_count:}{number of generations to initialize}

\item{G:}{number of worst-performing paretns the user wishes to replace by best offsprings}
}
\value{
The best individual seen over all iterations.

The converged generation
}
\description{
Ranked each model by its fitness,
Choose parents from generations propotional to their fitness
Do crossover and mutation
Replace a proportion G of the worst old individuals by best
  new individuals

Ranked each model by its AIC,
Choose parents from generations propotional to their fitness
Do crossover and mutation
Replace k worst old individuals by best k new individuals
}
\examples{
x <- mtcars[-1]
y <- unlist(mtcars[1])
select(x, y, selection = "tournament", K = 5, randomness=TRUE, G=0.8)
x <- mtcars[-1]
y <- unlist(mtcars[1])
finial_gen <- select(x, y, randomness=TRUE, G=2)
}
